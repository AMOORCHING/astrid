{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "astrid.fullname" . }}-redis
  labels:
    {{- include "astrid.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "astrid.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "astrid.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          args:
            - "--save"
            - "900"
            - "1"
            - "--save"
            - "300"
            - "10"
            - "--save"
            - "60"
            - "10000"
            - "--maxmemory"
            - "200mb"
            - "--maxmemory-policy"
            - "allkeys-lru"
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 999
            runAsGroup: 999
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: redis-data
              mountPath: /data
      {{- if .Values.redis.persistence.enabled }}
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: {{ include "astrid.fullname" . }}-redis-pvc
      {{- else }}
      volumes:
        - name: redis-data
          emptyDir:
            sizeLimit: {{ .Values.redis.persistence.size }}
      {{- end }}
{{- end }}
