{{- if .Values.celery.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "astrid.fullname" . }}-celery
  labels:
    {{- include "astrid.labels" . | nindent 4 }}
    app.kubernetes.io/component: celery
spec:
  replicas: {{ .Values.celery.replicaCount }}
  selector:
    matchLabels:
      {{- include "astrid.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: celery
  template:
    metadata:
      labels:
        {{- include "astrid.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: celery
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: celery
          image: "{{ .Values.celery.image.repository }}:{{ .Values.celery.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.celery.image.pullPolicy }}
          command: {{ .Values.celery.command }}
          env:
            - name: ENVIRONMENT
              value: "production"
            - name: PYTHONPATH
              value: "/app"
            - name: PYTHONDONTWRITEBYTECODE
              value: "1"
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: CELERY_BROKER_URL
              value: "redis://redis:6379/0"
            - name: CELERY_RESULT_BACKEND
              value: "redis://redis:6379/0"
            {{- if .Values.celery.envFromSecret }}
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "astrid.fullname" . }}-secrets
                  key: github-token
                  optional: true
            - name: NVD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "astrid.fullname" . }}-secrets
                  key: nvd-api-key
                  optional: true
            {{- end }}
          livenessProbe:
            exec:
              command:
                - "celery"
                - "-A"
                - "src.api.celery_app"
                - "inspect"
                - "ping"
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - "celery"
                - "-A"
                - "src.api.celery_app"
                - "inspect"
                - "ping"
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          resources:
            {{- toYaml .Values.celery.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10001
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: logs
              mountPath: /app/logs
              readOnly: false
      volumes:
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 100Mi
        - name: logs
          emptyDir:
            sizeLimit: 100Mi
      {{- with .Values.celery.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.celery.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.celery.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
